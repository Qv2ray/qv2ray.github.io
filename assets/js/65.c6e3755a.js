(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{432:function(t,a,v){"use strict";v.r(a);var e=v(16),_=Object(e.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"写入插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#写入插件"}},[t._v("#")]),t._v(" 写入插件")]),t._v(" "),v("ul",[v("li",[t._v("Qv2ray 插件文档")])]),t._v(" "),v("h2",{attrs:{id:"什么是插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是插件"}},[t._v("#")]),t._v(" 什么是插件")]),t._v(" "),v("p",[t._v("从技术上讲，一个插件是实现特定接口的共享库。 "),v("code",[t._v("Qv2rayPlugin::QvPluginInterface")]),t._v("。 因此可以通过 Qv2ray加载。")]),t._v(" "),v("h2",{attrs:{id:"写入插件时的必填项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#写入插件时的必填项"}},[t._v("#")]),t._v(" 写入插件时的必填项")]),t._v(" "),v("h3",{attrs:{id:"编译器版本-选项"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#编译器版本-选项"}},[t._v("#")]),t._v(" 编译器版本 / 选项")]),t._v(" "),v("ul",[v("li",[t._v("对于Linux和macOS，没有编译器限制。")]),t._v(" "),v("li",[t._v("编译插件需要MSVC")]),t._v(" "),v("li",[v("code",[t._v("-fno-sized-deploadation")]),t._v(" 应该用于编译插件，尤其是在“"),v("strong",[t._v("使用 Github Action 构建插件")]),t._v("”")])]),t._v(" "),v("h3",{attrs:{id:"qt-版本限制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#qt-版本限制"}},[t._v("#")]),t._v(" Qt 版本限制")]),t._v(" "),v("ul",[v("li",[t._v("这是一个 Qt 限制，一个插件所针对的版本不应大于加载器应用程序的版本(在这种情况下的 Qv2ray )")]),t._v(" "),v("li",[t._v("我们建议使用 "),v("code",[t._v("Qt 5.11.3")]),t._v(" 来构建插件，因为这是最古老的 Qv2ray 支持。")])]),t._v(" "),v("h3",{attrs:{id:"第三方连接时间和-或运行时间依赖关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#第三方连接时间和-或运行时间依赖关系"}},[t._v("#")]),t._v(" 第三方连接时间和/或运行时间依赖关系")]),t._v(" "),v("ul",[v("li",[t._v("These dependencies "),v("strong",[t._v("should")]),t._v(" be statically linked into the plugin library, otherwise:\n"),v("ul",[v("li",[t._v("告诉用户从任何地方下载/安装所有依赖关系库。")])])]),t._v(" "),v("li",[v("strong",[t._v("异常：OpenSSL "),v("em",[t._v("未被静态连接")]),t._v("。")]),t._v(" "),v("ul",[v("li",[t._v("Qv2ray 有自己的 OpenSSL 依赖关系检查，将确保兼容的 OpenSSL 已安装。")])])])]),t._v(" "),v("h2",{attrs:{id:"创建插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#创建插件"}},[t._v("#")]),t._v(" 创建插件")]),t._v(" "),v("p",[t._v("您在启动插件时有两个选项。")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("正在使用提供的 "),v("code",[t._v("模板")]),t._v(" 项目创建插件：")]),t._v(" "),v("p",[t._v("有一个名为 "),v("a",{attrs:{href:"https://github.com/Qv2ray/QvPlugin-Template",target:"_blank",rel:"noopener noreferrer"}},[t._v("QvPlugin模板"),v("OutboundLink")],1),t._v("的仓库，它可以用来创建你自己的插件。")])]),t._v(" "),v("li",[v("p",[t._v("从零开始创建插件。")])])]),t._v(" "),v("h3",{attrs:{id:"_1-使用模板项目"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-使用模板项目"}},[t._v("#")]),t._v(" 1. 使用模板项目")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("点击Github 仓库页面中的“使用此插件”并按照说明操作。")])]),t._v(" "),v("li",[v("p",[t._v("复制您的仓库刚刚创建。")])]),t._v(" "),v("li",[v("p",[t._v("执行命令，因为Github 不会在模板仓库中持久子模块数据。")]),t._v(" "),v("div",{staticClass:"language-bash extra-class"},[v("pre",{pre:!0,attrs:{class:"language-bash"}},[v("code",[v("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" 子模块添加 --force https://github.com/Qv2ray/QvPlugin-Interface/./接口\n")])])])]),t._v(" "),v("li",[v("p",[t._v("选择您的 "),v("code",[t._v("构建生成器")]),t._v("，方法是： 删除不需要的项目文件，例如 "),v("code",[t._v("QvSimplePlugin。 ro")]),t._v(" 或 "),v("code",[t._v("CMakeLists.txt")]),t._v(" 将不需要的 CI 配置从 "),v("code",[t._v("删除。/.github/workflows/")])])]),t._v(" "),v("li",[v("p",[t._v("打开 "),v("code",[t._v(".pr")]),t._v(" 文件或 "),v("code",[t._v("CMakeLists.txt")]),t._v(" 在 QtCreator。")])]),t._v(" "),v("li",[v("p",[t._v("在 "),v("code",[t._v("QvSimplePlugin.hpp")]),t._v(" 中进行任何修改 "),v("strong",[t._v("特别是插件元数据")])])]),t._v(" "),v("li",[v("p",[t._v("在本地测试构建，然后推到 Github 查看Github 操作是否可以通过。")])])]),t._v(" "),v("h3",{attrs:{id:"_2-从零开始创建插件"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-从零开始创建插件"}},[t._v("#")]),t._v(" 2. 从零开始创建插件")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("创建一个git仓库...")])]),t._v(" "),v("li",[v("p",[t._v("在 "),v("code",[t._v("https://github.com/Qv2ray/QvPlugin-Interface/")]),t._v(" 中添加插件接口作为子模块")])]),t._v(" "),v("li",[v("p",[t._v("将 "),v("code",[t._v("QvPluginInterface.cmake")]),t._v(" or "),v("code",[t._v("QvPluginInterface.pri")]),t._v(" 纳入您的项目文件。")])]),t._v(" "),v("li",[v("p",[t._v("编写一个类继承 "),v("code",[t._v("Qv2rayPlugin::Qv2rayInterface")]),t._v(" 并实现每个虚拟函数。")])]),t._v(" "),v("li",[v("p",[t._v("添加这些函数的栏位申报：")]),t._v(" "),v("div",{staticClass:"language-cpp extra-class"},[v("pre",{pre:!0,attrs:{class:"language-cpp"}},[v("code",[t._v("无效"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("PluginLog")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QString "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n无效"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("PluginErrorMessageBox")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" QString "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),v("li",[v("p",[t._v("如果你的插件在元数据中没有 "),v("code",[t._v("SPECIAL_TYPE_KERNEL")]),t._v(" 你可以返回一个 "),v("code",[t._v("nullptr")]),t._v(" in "),v("code",[t._v("GetPluginKernel")]),t._v(" 函数。 与 "),v("code",[t._v("GetSerializer")]),t._v("相同，但 "),v("strong",[t._v("不返回 "),v("code",[t._v("nullptr")]),t._v(" 在 "),v("code",[t._v("GetEventHandler()")])]),t._v(" 中。")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);